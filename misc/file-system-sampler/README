$Id: README,v 1.21 2009/04/05 11:48:06 chrisp Exp $   -*- text -*-

 File System Sampler
=====================

This package contains images of various file systems. Its purpose is
to aid in the testing and development of the disktype program.

Most images are exactly 8 MB in size and contain empty file
systems. This allows them to be compressed for storage. The file
'template.image' contains 8 MB of zeroes for easy setup of new images.

In CVS, all images are stored in compressed form. The .cvsignore file
makes sure uncompressed images stay out of CVS. The 'explode' and
'implode' scripts handle compression and decompression. Running
'implode -f' also removes the uncompressed images after
re-compression.

Read-only file systems use a collection of test files, contained in
'template-data.tar.gz'. The collection currently includes a large text
file and a hierarchy of several small files. The large text is a piece
of classic German literature (downloaded from Project Gutenberg,
http://gutenberg.net/). The small files tree is the arch/alpha/boot
tree of Linux 2.4.20.


 Image List
------------

atari-st-floppy.image

  An image of a DD floppy in the ATARI ST GEMDOS format, which is
  actually FAT12 with minimal deviations. This image was generated by
  the STEEM emulator, not by a real ATARI ST.

befs-intel.image

  Contains an empty BeOS BFS file system. It was created on a
  Intel x86 system and thus uses little-endian byte order. This image
  was contributed by Shadowcaster.

btrfs.image

  Contains an empty btrfs file system. It was created using
  btrfs-progs 0.18 from a Debian package.

cramfs-i386.image

  A Linux cramfs file system with the template files for read-only
  file systems. It was created on an i386 system running Debian
  GNU/Linux 3.0.

dos-partitions-extended.image

  A DOS-style partition map with one extended partition containing
  four logical partitions of different sizes. All partitions are
  marked as type 0x83 (Linux), but contain no file system. When
  creating the table, fdisk was set to use 16 sectors, 1 head, 1024
  cylinders.

dos-partitions-primary.image

  A DOS-style partition map with four primary partitions of different
  sizes (but similar to the image above). All partitions are marked as
  type 0x83 (Linux), but contain no file system. When creating the
  table, fdisk was set to use 16 sectors, 1 head, 1024 cylinders.

ext2.image

  Contains an empty ext2 file system, i.e. without journaling. It was
  created on an i386 system running Debian GNU/Linux 3.0. All tuning
  and compatibility options were left at their default.

ext3.image

  Contains an empty ext3 file system with an internal journal. (The
  presence of the journal is the only difference to the above one.)
  It was created on an i386 system running Debian GNU/Linux 3.0. All
  tuning and compatibility options were left at their default.

ext3-journal.image

  Contains an empty external journal for an ext3 file system. It was
  created on an i386 system running Debian GNU/Linux 3.0.

ext4.image

  Contains an empty ext4 file system with an internal journal.  It was
  created on an i386 system running Debian GNU/Linux 5.0. All tuning
  and compatibility options were left at their default.

ext4-journal.image

  Contains an empty external journal for an ext4 file system. It was
  created on an i386 system running Debian GNU/Linux 5.0.

ext4dev.image

  Contains an empty ext4 file system with an internal journal, marked
  for use with ext4dev.  It was created on an i386 system running
  Debian GNU/Linux 5.0. All tuning and compatibility options were left
  at their default.

ext4dev-journal.image

  Contains an empty external journal for an ext4 file system, marked
  for use with ext4dev (assuming there is such a marking for external
  journals). It was created on an i386 system running Debian GNU/Linux
  5.0.

fat12-floppy.image

  An image of a 3.5" HD floppy (1.44 MB) with an empty FAT12 file
  system as generated by Microsoft Windows XP.

freebsd-disk.image

  A hard disk image containing a FreeBSD-style partition layout. That
  is, there is a DOS partition map with a single partition (slice in
  BSD terms), which contains a BSD disklabel, which contains three UFS
  partitions (also partitions in BSD terms) and one swap
  partition. FreeBSD boot code is present in all possible places.

gpt-empty.image

  Contains a GPT partition table without any partitions. Created by
  GNU parted.

gpt.image

  Contains a GPT partition table with a single Basic Data
  partition. The partition has an empty ext2 file system on
  it. Created by GNU parted.

hfs.image

  Contains an empty HFS (non-Plus) file system. Created by the
  newfs_hfs command on Mac OS X 10.2.4.

hfs-plus.image

  Contains an empty HFS Plus file system. Created by the newfs_hfs
  command on Mac OS X 10.2.4.

hfs-plus-wrapped.image

  Contains an empty HFS Plus file system, wrapped in a dummy HFS file
  system for compatibility with earlier versions of Mac OS and Mac
  firmware. Created by the newfs_hfs command on Mac OS X 10.2.4.

iso9660-hybrid.image

  An ISO9660 and HFS hybrid file system with the template files for
  read-only file systems. This image uses ISO9660 Level 1 plus both
  the Joliet and Rock Ridge extensions. An addition, there is a HFS
  volume structure pointing to the same files. This image was created
  by mkisofs 1.14 using the command "mkisofs -J -r -hfs -V Hybrid -o
  iso9660-hybrid.image template-data".

iso9660-joliet.image

  An ISO9660 file system with the template files for read-only file
  systems. This image uses ISO9660 Level 1 plus the Joliet extension
  (additional descriptors with Unicode names). It was created by
  mkisofs 1.14 using the command "mkisofs -J -V 'ISO9660 Joliet' -o
  iso9660-joliet.image template-data".

iso9660-plain.image

  An ISO9660 file system with the template files for read-only file
  systems. This image uses just ISO9660 Level 1, no extensions. It was
  created by mkisofs 1.14 using the command "mkisofs -iso-level 1 -V
  ISO9660_PLAIN -o iso9660-plain.image template-data".

iso9660-rockridge.image

  An ISO9660 file system with the template files for read-only file
  systems. This image uses ISO9660 Level 1 plus the Rock Ridge
  extension. It was created by mkisofs 1.14 using the command "mkisofs
  -r -V 'ISO9660_ROCKRIDGE' -o iso9660-rockridge.image template-data".

jfs.image

  Contains an empty JFS file system. It was created on an i386 system
  running Debian GNU/Linux 3.0. This image is 16 MB in size because
  that's the minimum size for JFS (at least mkfs.jfs said so).

linux-swap-v[12]-*-[48]k.image

  The images matching this pattern contain Linux swap space in various
  formats. "v1" designates the old format ("SWAP-SPACE", limited to
  128M on 4K-page architectures), while "v2" designates the new format
  ("SWAPSPACE2", subversion 1). The rest of the image name gives the
  architecture and page size. Currently there are "i386-4k",
  "alpha-8k", "sarm-4k", and "sparc-8k". The architectures may also
  differ in endianness, which can be detected with the new format.

minix-v1-14.image
minix-v1-30.image
minix-v2-14.image
minix-v2-30.image

  Various empty Minix file systems, featuring all combinations of
  version 1 and version 2 inode format and 14 and 30 char maximum file
  name length. (Each combination has its own magic number.) All were
  created on an i386 system running Debian GNU/Linux 3.0.

reiser4.image

  An empty Reiser4 file system. The file system was created on an i386
  system running Debian GNU/Linux 3.1, with reiser4progs 1.0.2.

reiserfs-3.5-nonstd.image

  An empty ReiserFS file system in the old 3.5 format. To make it fit
  into 8 MB, it uses a smaller-than-default journal. Unfortunately
  this causes it to use the "ReIsEr3Fs" magic (instead of "ReIsErFs"),
  which isn't recognized by vanilla 2.4 kernels. The file system was
  created on an i386 system running Debian GNU/Linux 3.0, with
  reiserfsprogs 3.x.1b.

reiserfs-3.5.image

  An empty ReiserFS file system in the old 3.5 format. It is 40 MB in
  size to have enough room for the default journal area. The file
  system was created on an i386 system running Debian GNU/Linux 3.0,
  with reiserfsprogs 3.x.1b.

reiserfs-3.6-nonstd.image

  An empty ReiserFS file system in the new 3.6 format. To make it fit
  into 8 MB, it uses a smaller-than-default journal. Unfortunately
  this causes it to use the "ReIsEr3Fs" magic (instead of
  "ReIsEr2Fs"), which isn't recognized by vanilla 2.4 kernels. The
  file system was created on an i386 system running Debian GNU/Linux
  3.0, with reiserfsprogs 3.x.1b.

reiserfs-3.6.image

  An empty ReiserFS file system in the new 3.6 format. It is 40 MB in
  size to have enough room for the default journal area. The file
  system was created on an i386 system running Debian GNU/Linux 3.0,
  with reiserfsprogs 3.x.1b.

romfs.image

  A Linux romfs file system with the template files for read-only file
  systems. It was created on an i386 system running Debian GNU/Linux
  3.0.

squashfs-1.0-be.image

  A Linux squashfs file system with the template files for read-only
  file systems. It was created on an i386 system using mksquashfs 1.2,
  but with the '-be' switch that sets it to create the file system
  with big-endian structure contents.

squashfs-1.0-i386.image

  A Linux squashfs file system with the template files for read-only
  file systems. It was created on an i386 system using mksquashfs 1.2.

squashfs-2.0-be.image

  A Linux squashfs file system with the template files for read-only
  file systems. It was created on an i386 system using mksquashfs
  2.1r2 with the '-2.0' and '-be' options.

squashfs-2.0-i386.image

  A Linux squashfs file system with the template files for read-only
  file systems. It was created on an i386 system using mksquashfs
  2.1r2 with the '-2.0' option.

squashfs-2.1-be.image

  A Linux squashfs file system with the template files for read-only
  file systems. It was created on an i386 system using mksquashfs
  2.1r2 with the '-be' option.

squashfs-2.1-i386.image

  A Linux squashfs file system with the template files for read-only
  file systems. It was created on an i386 system using mksquashfs
  2.1r2.

template.image

  The empty template image. Created using the command
  "dd if=/dev/zero of=template.image bs=8192 count=1024".

template-data.tar.bz2

  A bzip2-compressed tar archive containing the files to use for
  read-only file systems. The file was generated by GNU tar. It
  doubles as a test for transparent decompression and tar archive
  recognition.

template-data.tar.gz

  A gzip-compressed tar archive containing the files to use for
  read-only file systems. The file was generated by GNU tar. It
  doubles as a test for transparent decompression and tar archive
  recognition.

udif-sparse.image

  An Apple UDIF disk image with an empty HFS+ file system. The image
  uses the sparse variant of the UDRW format. It does not have the
  usual UDIF header at the end, just the sparse header at the
  beginning.

udif-udco.image

  An Apple UDIF disk image with an empty HFS+ file system. The image
  is in the UDCO format, a compressed read-only format. It was
  generated from udif-udrw.image through format conversion.

udif-udro.image

  An Apple UDIF disk image with an empty HFS+ file system. The image
  is in the UDRO format, a uncompressed but sparse read-only
  format. It was generated from udif-udrw.image through format
  conversion.

udif-udrw.image

  An Apple UDIF disk image with an empty HFS+ file system. The image
  uses the UDRW format, which actually doesn't have the UDIF header at
  the end, but is a plain sector-by-sector image.

udif-udzo.image

  An Apple UDIF disk image with an empty HFS+ file system. The image
  is in the UDZO format, a zlib-compressed read-only format. It was
  generated from udif-udrw.image through format conversion.

ufs-darwin.image
ufs-darwin-old.image

  Both contain an empty UFS file system as created by the newfs
  command in Mac OS X 10.2.4. The "-old" image was created with the
  "-O" switch, which is supposedly "Creates a 4.3BSD format
  filesystem" (from the man page) for compatibility with "older boot
  ROMs". The man page doesn't mention just how old that would be.

  The newfs command wrote the following information to stdout when
  run:

    disk1:  16384 sectors in 32 cylinders of 16 tracks, 32 sectors
            8.0MB in 2 cyl groups (16 c/g, 4.00MB/g, 992 i/g)

xfs.image

  Contains an empty XFS file system. It was created on an i386 system
  running Debian GNU/Linux 3.0. All options were left at their
  defaults, so the file system has an internal log, no realtime
  section, and version 2 inodes (whatever that is ;-) ).


EOF
